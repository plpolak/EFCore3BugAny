// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by a tool.
//      Semanta Modeler (version 6.5.2.5281)
//      Copyrights Â© 1995-2019 by COAS Software Systems B.V.
// 
//      Class DbCIR
//      Entity implementation for object CIR.
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

#pragma warning disable 1591

namespace ErrorAnyEF3.DbModel
{

    [Table("CIR", Schema = "basic")]
    public partial class DbCIR
    {

        public DbCIR()
        {
        }

        /// <summary>
        /// Primary key
        /// </summary>
        [Key]
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Required]
        [Column("Id", Order = 1, TypeName = "int")]
        public int Id { get; set; }

        /// <summary>
        /// Name to identify the project
        /// </summary>
        [Required]
        [Column("Description", Order = 2, TypeName = "nvarchar(80)")]
        [StringLength(80)]
        public string Description { get; set; }

        /// <summary>
        /// Is this a Quest project
        /// </summary>
        [Required]
        [Column("QuestProject", Order = 3, TypeName = "bit")]
        public bool QuestProject { get; set; }

        /// <summary>
        /// Short code to identify the project.
        /// </summary>
        [Required]
        [Column("Code", Order = 4, TypeName = "nvarchar(20)")]
        [StringLength(20)]
        public string Code { get; set; }

        /// <summary>
        /// A free field to add remarks on the record
        /// </summary>
        [Column("Remarks", Order = 5, TypeName = "nvarchar(500)")]
        [StringLength(500)]
        public string Remarks { get; set; }

        /// <summary>
        /// User who created the record
        /// </summary>
        [Required]
        [Column("CreatedByUserLoginId", Order = 6, TypeName = "int")]
        public int CreatedByUserLoginId { get; set; }

        /// <summary>
        /// User who created the record
        /// </summary>
        [ForeignKey(nameof(CreatedByUserLoginId))]
        public virtual DbUserLogin CreatedByUserLogin { get; set; }

        /// <summary>
        /// Creation data of the record
        /// </summary>
        [Required]
        [Column("CreatedAt", Order = 7, TypeName = "datetime")]
        public DateTime CreatedAt { get; set; }

        /// <summary>
        /// User who last modified the record
        /// </summary>
        [Required]
        [Column("ModifiedByUserLoginId", Order = 8, TypeName = "int")]
        public int ModifiedByUserLoginId { get; set; }

        /// <summary>
        /// User who last modified the record
        /// </summary>
        [ForeignKey(nameof(ModifiedByUserLoginId))]
        public virtual DbUserLogin ModifiedByUserLogin { get; set; }

        /// <summary>
        /// Last modification date of the record
        /// </summary>
        [Required]
        [Column("ModifiedAt", Order = 9, TypeName = "datetime")]
        public DateTime ModifiedAt { get; set; }

        /// <summary>
        /// Any planned go live
        /// </summary>
        [Column("GoLiveAt", Order = 10, TypeName = "datetime")]
        public DateTime? GoLiveAt { get; set; }

        [InverseProperty(nameof(DbEntity.CreatorCIR))]
        public virtual ICollection<DbEntity> CreatedEntities { get; set; }

        [InverseProperty(nameof(DbEntity.MasterCIR))]
        public virtual ICollection<DbEntity> MasteredEntities { get; set; }

    }

}

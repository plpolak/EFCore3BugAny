// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by a tool.
//      Semanta Modeler (version 6.5.2.5281)
//      Copyrights Â© 1995-2019 by COAS Software Systems B.V.
// 
//      Class DbEntity
//      Entity implementation for object Entity.
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

#pragma warning disable 1591

namespace ErrorAnyEF3.DbModel
{

    [Table("Entity", Schema = "basic")]
    public partial class DbEntity: ICIREntity
    {

        public DbEntity()
        {
        }

        /// <summary>
        /// Primary key
        /// </summary>
        [Key]
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        [Required]
        [Column("Id", Order = 1, TypeName = "int")]
        public int Id { get; set; }

        /// <summary>
        /// A description for the Entity
        /// </summary>
        [Required]
        [Column("Description", Order = 2, TypeName = "nvarchar(80)")]
        [StringLength(80)]
        public string Description { get; set; }

        /// <summary>
        /// Optional code field for some tables. Controlled by the 
        /// Entity Type HasCode attribute
        /// </summary>
        [Column("Code", Order = 3, TypeName = "nvarchar(5)")]
        [StringLength(5)]
        public string Code { get; set; }

        /// <summary>
        /// A free field to add remarks on the record
        /// </summary>
        [Column("Remarks", Order = 4, TypeName = "nvarchar(500)")]
        [StringLength(500)]
        public string Remarks { get; set; }

        /// <summary>
        /// User who created the record
        /// </summary>
        [Required]
        [Column("CreatedByUserLoginId", Order = 5, TypeName = "int")]
        public int CreatedByUserLoginId { get; set; }

        /// <summary>
        /// User who created the record
        /// </summary>
        [ForeignKey(nameof(CreatedByUserLoginId))]
        public virtual DbUserLogin CreatedByUserLogin { get; set; }

        /// <summary>
        /// Creation data of the record
        /// </summary>
        [Required]
        [Column("CreatedAt", Order = 6, TypeName = "datetime")]
        public DateTime CreatedAt { get; set; }

        /// <summary>
        /// User who last modified the record
        /// </summary>
        [Required]
        [Column("ModifiedByUserLoginId", Order = 7, TypeName = "int")]
        public int ModifiedByUserLoginId { get; set; }

        /// <summary>
        /// User who last modified the record
        /// </summary>
        [ForeignKey(nameof(ModifiedByUserLoginId))]
        public virtual DbUserLogin ModifiedByUserLogin { get; set; }

        /// <summary>
        /// Last modification date of the record
        /// </summary>
        [Required]
        [Column("ModifiedAt", Order = 8, TypeName = "datetime")]
        public DateTime ModifiedAt { get; set; }

        /// <summary>
        /// Functional key that is filled only once when a record is 
        /// created. Whenever this record is updated - via a project - 
        /// this key is copied into the new version-record
        /// </summary>
        [Required]
        [Column("EntityKey", Order = 9, TypeName = "int")]
        public int EntityKey { get; set; }

        /// <summary>
        /// Toggle this field off to mark the record as deleted
        /// </summary>
        [Required]
        [Column("IsActive", Order = 10, TypeName = "bit")]
        public bool IsActive { get; set; }

        /// <summary>
        /// The project thru which this record was inserted
        /// </summary>
        [Required]
        [Column("CreatorCIRId", Order = 11, TypeName = "int")]
        public int CreatorCIRId { get; set; }

        /// <summary>
        /// The project thru which this record was inserted
        /// </summary>
        [ForeignKey(nameof(CreatorCIRId))]
        public virtual DbCIR CreatorCIR { get; set; }

        /// <summary>
        /// The project that is actual mastering this record. Initially 
        /// Master = Creator. Once this creator project goes live, the 
        /// Master becomes LiveID. The previous version of this 
        /// record (same key, master = LiveID) is filled with this master
        /// </summary>
        [Required]
        [Column("MasterCIRId", Order = 12, TypeName = "int")]
        public int MasterCIRId { get; set; }

        /// <summary>
        /// The project that is actual mastering this record. Initially 
        /// Master = Creator. Once this creator project goes live, the 
        /// Master becomes LiveID. The previous version of this 
        /// record (same key, master = LiveID) is filled with this master
        /// </summary>
        [ForeignKey(nameof(MasterCIRId))]
        public virtual DbCIR MasterCIR { get; set; }

        /// <summary>
        /// The type of the Entity
        /// </summary>
        [Required]
        [Column("EntityTypeId", Order = 13, TypeName = "int")]
        public int EntityTypeId { get; set; }

        /// <summary>
        /// The type of the Entity
        /// </summary>
        [ForeignKey(nameof(EntityTypeId))]
        public virtual DbEntityType EntityType { get; set; }

    }

}
